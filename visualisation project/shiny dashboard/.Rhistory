knitr::opts_chunk$set(echo = TRUE)
y <- x[-length(x)] # always delets the final element
x <- c(7,3,5,2,0,1)
y <- x[-3]
y
x <- c(1,3,6,9,0)
x
x[-2] # all the elements except the second element
x[3] <- 200 #modify an element
x
# to delete a vector
x <- NULL
x
x <- c(2, 9, 7)
x
y <- c(x, x, 10)
y
y <- x[-length(x)] # always delets the final element
y
x=c(0:100)
y=x*1.8 + 32
plot(x,y)
head(myData)
myData <‐ data.frame(x,y,z)
50,100)
x <‐ rnorm(1000)
y <‐ 3*x + 10 + rnorm(1000)
50,100)
x <‐ rnorm(1000)
y <‐ 3*x + 10 + rnorm(1000)
50,100)
x <‐ rnorm(1000)
y <‐ 3*x + 10 + rnorm(1000)
z <‐ runif(1000,50,100)
z <- runif(1000,50,100)
myData <- data.frame(x,y,z)
shiny::runApp('Documents/visualisation/r ')
install.packages("ggplot2")
install.packages("leaflet")
install.packages("shiny")
install.packages("dplyr")
install.packages("shiny")
install.packages("dplyr")
install.packages(c("assertthat", "backports", "BH", "bit", "blob", "broom", "cli", "curl", "DBI", "dbplyr", "digest", "evaluate", "fansi", "forcats", "glue", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "jsonlite", "knitr", "later", "lattice", "lazyeval", "markdown", "mime", "mongolite", "nlme", "odbc", "openssl", "packrat", "pkgconfig", "plyr", "prettyunits", "profvis", "promises", "purrr", "R6", "Rcpp", "RCurl", "readr", "readxl", "reshape2", "rJava", "RJDBC", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "rstudioapi", "sparklyr", "stringi", "stringr", "tidyr", "tinytex", "xfun", "xml2", "xtable", "yaml"))
install.packages(c("backports", "bit", "curl", "digest", "fansi", "glue", "htmltools", "httpuv", "jsonlite", "later", "lattice", "lazyeval", "markdown", "mime", "nlme", "plyr", "profvis", "promises", "purrr", "Rcpp", "RCurl", "reshape2", "rJava", "RJSONIO", "rlang", "stringi", "xml2", "yaml"))
install.packages("shiny")
install.packages("shiny")
install.packages("shiny",dependencies = TRUE)
install.packages(c("backports", "bit", "curl", "digest", "fansi", "glue", "htmltools", "httpuv", "jsonlite", "later", "lattice", "lazyeval", "markdown", "mime", "nlme", "PKI", "plyr", "profvis", "promises", "purrr", "Rcpp", "RCurl", "reshape2", "rJava", "RJSONIO", "rlang", "stringi", "xml2", "yaml"))
install.packages(c("backports", "bit", "curl", "digest", "fansi", "glue", "htmltools", "httpuv", "jsonlite", "later", "lattice", "lazyeval", "markdown", "mime", "nlme", "PKI", "plyr", "profvis", "promises", "purrr", "Rcpp", "RCurl", "reshape2", "rJava", "RJSONIO", "rlang", "stringi", "xml2", "yaml"))
shiny::runApp('Documents/visualisation/r ')
install.packages("ggplot2")
shiny::runApp('Documents/visualisation/r ')
cdata <- read.csv("assignment-02-data-formated.csv")
data <- read.csv("assignment-02-data-formated.csv")
data <- read.csv("assignment-02-data-formated.csv")
library(shiny)
library(ggplot2)
library(dplyr)
mydata <- read.csv("assignment-02-data-formated.csv")
mydata2 <- mydata %>% mutate(value_without_percent=gsub("%", "", as.character(mydata$value)))
mydata3 <- transform(mydata2,value_without_percent = as.numeric(value_without_percent))
shinyServer(function(input,output){
data <- reactive({
mydata4 <- mydata3 %>% filter(coralType == input$coral)
ggplot(mydata4, aes(x=year, y= value_without_percent, group = 1)) + geom_point() + geom_smooth(method = input$smoothing) + facet_grid(cols=vars(location))
})
leafletmap <- reactive({
leaflet(data = mydata3, ) %>% addTiles() %>%
addMarkers(~longitude, ~latitude, label = ~as.character(location))
})
q1 <- reactive({
ggplot(mydata3, aes(x=year, y= value_without_percent, group = 1)) + geom_point(aes(color = coralType)) + facet_grid(latitude~coralType) + geom_smooth(method = input$smoothing, aes(color = coralType))
})
output$coralplot <- renderPlot(data())
output$sitemap <- renderLeaflet(leafletmap())
output$q1plot <- renderPlot(q1())
})
library(ggplot2)
library(dplyr)
mydata <- read.csv("assignment-02-data-formated.csv")
mydata2 <- mydata %>% mutate(value_without_percent=gsub("%", "", as.character(mydata$value)))
source('~/Documents/visualisation/r /Untitled.R')
data <- read.csv("assignment-02-data-formated.csv")
data <- read.csv("assignment-02-data-formated.csv")
source('~/Documents/visualisation/r /Untitled.R')
source('~/Documents/visualisation/r /Untitled.R')
source('~/Documents/visualisation/r /Untitled.R')
source('~/Documents/visualisation/r /Untitled.R')
source('~/Documents/visualisation/r /Untitled.R')
data <- read.csv("assignment-02-data-formated.csv")
source('~/Documents/visualisation/r /Untitled.R')
library(shiny); runApp('Documents/visualisation/r /shiny.R')
# 1st Tast of the assignment
library(ggplot2)
#Reading the dataset into R
data <- read.csv("assignment-02-data-formated.csv")
#changing datatype of value to numeric
data =data %>% mutate(new_value=  gsub("%", "", paste(data$value)))
library(shiny); runApp('Documents/sem 1 2020/visualisation/R/shiny.R')
# 1st Tast of the assignment
library(ggplot2)
#Reading the dataset into R
data <- read.csv("assignment-02-data-formated.csv")
#changing datatype of value to numeric
data =data %>% mutate(new_value=  gsub("%", "", paste(data$value)))
data=transform(data,new_value = as.numeric(new_value))
#gglot for bleaching varies over the years for each type of coral and for each site
ggplot(data,aes(year,new_value,color=location)) + geom_point() + facet_grid(coralType~reorder(location, latitude)) + geom_smooth()
# 1st Tast of the assignment
library(ggplot2)
#Reading the dataset into R
data <- read.csv("assignment-02-data-formated.csv")
#changing datatype of value to numeric
data =data %>% mutate(new_value=  gsub("%", "", paste(data$value)))
data=transform(data,new_value = as.numeric(new_value))
#gglot for bleaching varies over the years for each type of coral and for each site
ggplot(data,aes(year,new_value,color=location)) + geom_point() + facet_grid(coralType~reorder(location, latitude)) + geom_smooth()
#Reading the dataset into R
data <- read.csv("assignment-02-data-formated.csv")
runApp('Documents/sem 1 2020/visualisation/R/shiny.R')
install.packages("shinydashboard")
runApp('Documents/sem 1 2020/visualisation/R')
runApp('Documents/sem 1 2020/visualisation/R')
runApp('Documents/sem 1 2020/visualisation/R')
runApp('Documents/sem 1 2020/visualisation/R')
library(shiny); runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/server.R')
library(shiny); runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/Untitled.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/Untitled.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/Untitled.R')
runApp('Documents/sem 1 2020/visualisation/ass 2/untitled folder/Untitled.R')
